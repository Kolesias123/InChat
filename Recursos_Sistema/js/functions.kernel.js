/** * InfoSmart JavaScript Kernel. * * Archivo de procesamiento para JavaScipt con jQuery * recomendado para todas las aplicaciones de InfoSmart. * * InfoSmart. Todos los derechos reservados. * Copyright 2012 - Iván Bravo Bravo. * http://www.infosmart.mx/ - http://www.jquery.com/**/window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;window.Notifications = window.webkitNotifications || window.Notifications;K = null;Kernel = {	_page: {		title: '',		hash: '',		name: '',		nyan: false	},	_anim: {		title: '',		times: '',		total: ''	},		_allow: {		html: false,		audio: false,		video: false,		file: false,		geo: false,		notify: false,		file_sys: false,		dnd: false,		socket: false	},		_pos: {		latitude: '',		longitude: '',		accuracy: ''	},		_serv: {		accounts: document.location.protocol + '//localhost/accounts',		resources_accounts: document.location.protocol + '//localhost/resources/laccounts',		reports: document.location.protocol + '//localhost/reports',		live: document.location.protocol + '//localhost/wooots'	},		_callFrom: {		'infosmart.mx': true,		'localhost': true,		'infosmart.zapto.org': true	},		_callAction: {		'example': function() { alert('Example'); },		'close.alert': function() { InfoAlerts.close(); },		'reload.p.sec': function() { window.location.reload(); }	},		_lastCall: null,		_ot: {		sb: 0	},		_protocol: 'http://',	_socket: null,	_mActive: false,	Init: function(m, s)	{		if(m == "tips")		{			Kernel.AddScript(Resources_Sys + '/js/functions.tips.js');			Kernel.AddStyle(Resources_Sys + '/css/style.tips.css');			setTimeout(function() { InfoTips.Init(s); }, 1500);		}	},		Allow: function(t)	{		if(t == "html5")			return Kernel._allow.html;		if(t == "audio")			return Kernel._allow.audio;		if(t == "video")			return Kernel._allow.video;		if(t == "file")			return Kernel._allow.file;		if(t == "geo")			return Kernel._allow.geo;		if(t == "notify")			return Kernel._allow.notify;		if(t == "dnd")			return Kernel._allow.dnd;		if(t == "socket")			return Kernel._allow.socket;		if(t == "file_sys")			return Kernel._allow.file_sys;					return false;	},		VerifyPerms: function()	{		try		{			if(!!(document.createElement("canvas").getContext('2d')))					Kernel._allow.html = true;							if(!!(document.createElement('audio').canPlayType('audio/mpeg')))				Kernel._allow.audio = true;								if(!!(document.createElement('video').canPlayType('video/mp4')))				Kernel._allow.video = true;								if(window.File && window.FileReader && window.FileList && window.Blob)				Kernel._allow.file = true;								if(navigator.geolocation)				Kernel._allow.geo = true;								if(window.Notifications)				Kernel._allow.notify = true;			if(window.requestFileSystem)				Kernel._allow.file_sys = true;											if(window.WebSocket)				Kernel._allow.socket = true;		} catch(e) { }	},		GetGeo : function(successCallback, errorCallback)	{			if(this.Allow("geo"))			navigator.geolocation.getCurrentPosition(successCallback, errorCallback);	},		RequestNotify : function()	{		if(this.Allow("notify"))		{			if(window.Notifications.checkPermission() != 0)				window.Notifications.requestPermission();		}	},		AllowNotifications : function()	{				if(this.Allow("notify") && window.Notifications.checkPermission() == 0)			return true;		else			return false;	},		SetPath : function(title, path)	{		if(title == undefined || title == "")			title = this._page.title;					document.title = title;		window.history.replaceState(null, "", path);	},		AnimateTitle : function(title)	{		if(this._anim.times <= this._anim.total)		{			if(document.title == this._page.title)				document.title = title;			else				document.title = this._page.title;					this._anim.times += 1;				this._anim.title = true;						setTimeout('Kernel.AnimateTitle("' + title + '")', 1500);		}		else		{			this._anim.times = 0;			this._anim.title = false;						document.title = this._page.title;					}	},		SetTitle : function(title, animation, total)	{				if(this.IsNumeric(total))			this._anim.total = total;					if(title == "")			return;		if(animation == true)		{			if(this._anim.title == false)				this.AnimateTitle(title);		}		else			document.title = title;	},		CleanText : function(str)	{				if(str == "")			return str;					str = str.replace(/<([^<]+)>([^<]+)<\/([^<]+)>/gi, "$2");		str = str.replace(/<br>/gi, "");						return str;	},		IsNumeric : function(str)	{		str = parseFloat(str);				if((str - 0) == str)			return true;		else			return false;	},		NewWindow : function(opts)	{		try		{			var options = {				'page': '',				'name': 'InfoSmartPage',				'fullscreen': '0',				'toolbar': '0',				'location': 'center',				'status': '0',				'menubar': '0',				'scrollbars': 'auto',				'resizable': '0',				'width': '100',				'height': '100'			};						for(var param in opts)				options[param] = opts[param];							var settings = "fullscreen=" + options.fullscreen + 			",toolbar=" + options.toolbar +			",location=" + options.location +			",status=" + options.status +			",menubar=" + options.menubar +			",scrollbars=" + options.scrollbars +			",resizable=" + options.resizable +			",width=" + options.width +			",height=" + options.height;						if(options.page != "")			{				console.log('Se ha abierto una nueva ventana con la dirección "' + options.page + '"');				return window.open(options.page, options.name, settings, '1');			}			else				console.error('Se ha intentado abrir una ventana sin dirección de destino.');		}		catch(e)		{ console.error('Ha sucedido un error al intentar abrir una ventana nueva.'); }	},		Trim : function(str)	{		try		{ return str.replace(/^\s+/g,'').replace(/\s+$/g,''); }		catch(e)		{ return str; }	},		rawurlencode: function(str) {		str = (str + '').toString();		return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').		replace(/\)/g, '%29').replace(/\*/g, '%2A');	},		SetCookie : function(name, value, days, domain)	{		if(days) 		{			var date = new Date();			date.setTime(date.getTime()+(days*24*60*60*1000));			var expires = "; expires="+date.toGMTString();		}		else 			var expires = "";		cookie = name + "=" + value + expires + "; path=/;";		if(domain !== undefined)			cookie += domain=" + domain";				document.cookie = cookie;		console.log('Se ha creado la Cookie "' + name + '" con éxito.');	},		GetCookie : function(name)	{		var nameEQ = name + "=";		var ca = document.cookie.split(';');				for(var i=0;i < ca.length;i++) 		{			var c = ca[i];						while (c.charAt(0)==' ')				c = c.substring(1,c.length);							if (c.indexOf(nameEQ) == 0)				return c.substring(nameEQ.length,c.length);		}				return null;	},		DeleteCookie : function(name)	{		this.SetCookie(name, "", -1);	},		SetData : function(param, value)	{		try		{ window.localStorage.setItem(param, value); }		catch (e)		{ console.error('Ha sucedido un error al intentar guardar información local.'); }	},		GetData : function(param)	{		try		{ return window.localStorage.getItem(param); }		catch (e)		{ console.error('Ha sucedido un error al intentar obtener una variable de la información local.');	}	},		DeleteData : function(param)	{		try		{ window.localStorage.removeItem(param); }		catch(e)		{ console.error('Ha sucedido un error al intentar eliminar una variable de la información local.'); }	},		ShowBox : function(a, t)	{		$(".box-" + a).fadeIn("slow");				if(t > 1000)			setTimeout(function() { $(".box-" + a).fadeOut("slow"); }, t);	},		GetBrowser : function(user_agent)	{		if(user_agent == "" || user_agent == undefined)		{			if(navigator.userAgent != undefined)				user_agent = navigator.userAgent;			else				user_agent = navigator.appName + " " + navigator.appVersion;		}				if(user_agent.indexOf('Chrome') != -1)			return "Google Chrome";		else if(user_agent.indexOf('Safari') != -1)			return "Safari";		else if(user_agent.indexOf('Opera') != -1)			return "Opera";		else if(user_agent.indexOf('Firefox') != -1)			return "Mozilla Firefox";		else if(user_agent.indexOf('RockMelt') != -1)			return "RockMelt";		else if(user_agent.indexOf('Maxthon') != -1)			return "Maxthon";		else if(user_agent.indexOf('MSIE 10') != -1)			return "Internet Explorer 10";		else if(user_agent.indexOf('MSIE 9') != -1)			return "Internet Explorer 9";		else if(user_agent.indexOf('MSIE') != -1)			return "Internet Explorer";		else			return "Desconocido";	},		GetOS : function(user_agent)	{		if(user_agent == "" || user_agent == undefined)			user_agent = navigator.appName + " " + navigator.appVersion;					if(user_agent.indexOf('Windows NT 6.1') != -1)			return "Windows 7";		else if(user_agent.indexOf('Windows NT 6.0') != -1)			return "Windows Vista";		else if(user_agent.indexOf('Windows NT 5.2') != -1)			return "Windows Server 2003";		else if(user_agent.indexOf('Windows NT 5.1') != -1 || user_agent.indexOf('Windows XP') != -1)			return "Windows XP";		else if(user_agent.indexOf('Windows NT 5.0') != -1 || user_agent.indexOf('Windows 2000') != -1)			return "Windows 2000";		else if(user_agent.indexOf('Windows 98') != -1 || user_agent.indexOf('Win98') != -1)			return "Windows 98";		else if(user_agent.indexOf('Linux') != -1 || user_agent.indexOf('X11') != -1)			return "Linux";		else if(user_agent.indexOf('Mac_PowerPC') != -1 || user_agent.indexOf('Macintosh') != -1)			return "MacOS";		else			return "Desconocido";	},	TimeDate : function(time, hour)	{		if(!this.IsNumeric(time))			return "";					var result = "";				try {			var date = new Date(time * 1000);			result = date.getDay() + "-" + date.getMonth() + "-" + date.getFullYear();						if(hour == true)				result += " " + date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds();						} catch(e) { }					return result;	},		DateTime : function(date)	{		var result = "";				try {			var d = new Date(date);			result = d.getTime() / 1000.0;		} catch(e) { }				return result;	},		CalculateTime: function(time)	{		var inte = ["segundo", "minuto", "hora", "día", "semana", "mes", "año"];		var dur = [60, 60, 24, 7, 4.35, 12];				time = parseInt(time);		var now = parseInt(this.UnixTime());		var j = 0;				var dif = 0;		var str = "";				var sh = time + 10;				if(now == time || now < sh)			return "Justo ahora";		else if(now > time)		{			dif = now - time;			str = "Hace";		}		else		{			dif = time - now;			str = "Dentro de";		}				for(j = 0; dif >= dur[j] && j < dur.length - 1; j++)			dif /= dur[j];					dif = Math.round(dif);				if(dif != 1)		{			inte[5] += "e";			inte[j] += "s";		}				return str + " " + dif + " " + inte[j];	},		UnixTime: function() 	{		return Math.round((new Date()).getTime() / 1000);	},		FilterHash: function()	{		return document.location.hash.substring(2);		},		HaveStyle: function(s)	{		if(document.querySelector("link[href='" + s + "']") == null)			return false;		else			return true;	},		AddStyle: function(s, el)	{		if(this.HaveStyle(s))			return;					if(el == "" || el == undefined)			el = "head";					try		{			var css = document.createElement('link');			css.href = s;			css.rel = 'stylesheet';			document.querySelector(el).appendChild(css);		}		catch(e) { console.error("No se ha podido importar el archivo de estilo " + s); }	},		HaveScript: function(s)	{		if(document.querySelector("script[src='" + s + "']") == null)			return false;		else			return true;	},		AddScript: function(s, el)	{		if(this.HaveScript(s))			return;					if(el == "" || el == undefined)			el = "head";					try		{			var js = document.createElement('script');			js.src = s;			document.querySelector(el).appendChild(js);		}		catch(e) { console.error("No se ha podido importar el archivo de script " + s); }	},		UrlEncode: function(u)	{		try		{ return encodeURIComponent(u).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A'); }		catch(e) { return u; }	},		StrPos: function(h, n, o)	{		try		{			var i = (h + '').indexOf(n, (o || 0));			return i === -1 ? false : i;		}		catch(e) { return false; }	},	HaveNum: function(str)	{		numbers = '0123456789';		for(i = 0; i < str.length; i++)		{	    	if(numbers.indexOf(str.charAt(i),0) != -1)	        	return true;		}	   return false;	},	HaveLetters: function(str)	{		letters = 'abcdefghyjklmnñopqrstuvwxyz';		str = str.toLowerCase();		for(i = 0; i < str.length; i++)		{	    	if(letters.indexOf(str.charAt(i),0) != -1)	        	return true;	    }	    return false;	},	HaveLower: function(str)	{		letters = 'abcdefghyjklmnñopqrstuvwxyz';		for(i = 0; i < str.length; i++)		{	    	if(letters.indexOf(str.charAt(i),0) != -1)	        	return true;	    }	    return false;	},	HaveUpper: function(str)	{		letters = 'ABCDEFGHIJKLMNÑOPQRSTUVWXYZ';		for(i = 0; i < str.length; i++)		{	    	if(letters.indexOf(str.charAt(i),0) != -1)	        	return true;	 	}	 	return false;	},	HaveSpecial: function(str)	{		letters = '%&^*(){}-_!$@';		for(i = 0; i < str.length; i++)		{	    	if(letters.indexOf(str.charAt(i),0) != -1)	        	return true;	 	}	 		 	return false;	},	SecurityStrong: function(str)	{		Level = 0;		if(str.length == 0)			return 0;		if(this.HaveNum(str))			Level += 15;		if(this.HaveLetters(str))			Level += 5;		if(this.HaveUpper(str))			Level += 15;		if(this.HaveSpecial(str))			Level += 20;		if(str.length >= 4 && str.length <= 5)			Level += 10;		if(str.length >= 6 && str.length <= 8)			Level += 20;		if(str.length >= 9 && str.length <= 12)			Level += 35;		if(str.length > 12)			Level += 45;		return Level;	},		showMsg: function(msg, time, block, cb)	{		Info.ShowMsg(msg, time, block, cb);	},		closeMsg : function()	{		Info.CloseMsg();	},		Print_R : function(arr, level)	{		var dumped_text = "";				if(!level) 			level = 0;					var level_padding = "";				for(var j=0; j < level + 1; j++)			level_padding += "    ";			if(typeof(arr) == 'object') 		{			for(var item in arr) 			{				var value = arr[item];							if(typeof(value) == 'object') 				{					dumped_text += level_padding + "'" + item + "' ...\n";					dumped_text += this.Print_R(value,level+1);				} 				else					dumped_text += level_padding + "'" + item + "' => \"" + value + "\"\n";			}		}		else			dumped_text = "===>"+arr+"<===("+typeof(arr)+")";					return dumped_text;	},		Json_decode: function(str_json)	{		var json = window.JSON;				if (typeof json === 'object' && typeof json.parse === 'function') 		{						try 			{ return json.parse(str_json); } 			catch (err) 			{				console.error("Ha sucedido un error al descodificar '" + str_json + "' de JSON.", "error");				return null;			}		}	 		var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;		var j;		var text = str_json;		cx.lastIndex = 0;				if (cx.test(text)) 		{			text = text.replace(cx, function (a) {				return '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);			});		}	 		if ((/^[\],:{}\s]*$/).		test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').		replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').		replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) 		{			j = eval('(' + text + ')');	 			return j;		}	 		return null;	},	parseJSON: function(str_json)	{		return this.Json_decode(str_json);	},		Json_encode: function(str_json)	{		var retVal, json = window.JSON;				try 		{			if (typeof json === 'object' && typeof json.stringify === 'function') 			{				retVal = json.stringify(str_json); 				if (retVal === undefined)					this.Clog("Ha sucedido un error al codificar '" + str_json + "' a JSON.", "error");									return retVal;			}	 			var value = str_json;	 			var quote = function (string) 			{				var escapable = /[\\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;								var meta = {					'\b': '\\b',					'\t': '\\t',					'\n': '\\n',					'\f': '\\f',					'\r': '\\r',					'"': '\\"',					'\\': '\\\\'				};	 				escapable.lastIndex = 0;								return escapable.test(string) ? '"' + string.replace(escapable, function (a) {					var c = meta[a];					return typeof c === 'string' ? c : '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);				}) + '"' : '"' + string + '"';			};	 			var str = function (key, holder) 			{				var gap = '';				var indent = '    ';				var i = 0; // The loop counter.				var k = ''; // The member key.				var v = ''; // The member value.				var length = 0;				var mind = gap;				var partial = [];				var value = holder[key];	 				// If the value has a toJSON method, call it to obtain a replacement value.				if (value && typeof value === 'object' && typeof value.toJSON === 'function') {					value = value.toJSON(key);				}	 				// What happens next depends on the value's type.				switch (typeof value) {				case 'string':					return quote(value);	 				case 'number':					// JSON numbers must be finite. Encode non-finite numbers as null.					return isFinite(value) ? String(value) : 'null';	 				case 'boolean':				case 'null':					// If the value is a boolean or null, convert it to a string. Note:					// typeof null does not produce 'null'. The case is included here in					// the remote chance that this gets fixed someday.					return String(value);	 				case 'object':					// If the type is 'object', we might be dealing with an object or an array or					// null.					// Due to a specification blunder in ECMAScript, typeof null is 'object',					// so watch out for that case.					if (!value) {						return 'null';					}					if ((this.PHPJS_Resource && value instanceof this.PHPJS_Resource) || (window.PHPJS_Resource && value instanceof window.PHPJS_Resource)) {						throw new SyntaxError('json_encode');					}	 					// Make an array to hold the partial results of stringifying this object value.					gap += indent;					partial = [];	 					// Is the value an array?					if (Object.prototype.toString.apply(value) === '[object Array]') {						// The value is an array. Stringify every element. Use null as a placeholder						// for non-JSON values.						length = value.length;						for (i = 0; i < length; i += 1) {							partial[i] = str(i, value) || 'null';						}	 						// Join all of the elements together, separated with commas, and wrap them in						// brackets.						v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']';						gap = mind;						return v;					}	 					// Iterate through all of the keys in the object.					for (k in value) {						if (Object.hasOwnProperty.call(value, k)) {							v = str(k, value);							if (v) {								partial.push(quote(k) + (gap ? ': ' : ':') + v);							}						}					}	 					// Join all of the member texts together, separated with commas,					// and wrap them in braces.					v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}';					gap = mind;					return v;				case 'undefined':					// Fall-through				case 'function':					// Fall-through				default:					throw new SyntaxError('json_encode');				}			};	 			// Make a fake root object containing our value under the key of ''.			// Return the result of stringifying the value.			return str('', {				'': value			});	 		} catch (err) { // Todo: ensure error handling above throws a SyntaxError in all cases where it could			// (i.e., when the JSON global is not available and there is an error)			if (!(err instanceof SyntaxError)) {				throw new Error('Unexpected error type in json_encode()');			}			this.php_js = this.php_js || {};			this.php_js.last_error_json = 4; // usable by json_last_error()			return null;		}	},	buildJSON: function(str_json)	{		return this.Json_encode(str_json);	},		utf8_decode: function(str_data) 	{		var tmp_arr = [],			i = 0,			ac = 0,			c1 = 0,			c2 = 0,			c3 = 0;	 		str_data += '';	 		while (i < str_data.length) {			c1 = str_data.charCodeAt(i);			if (c1 < 128) {				tmp_arr[ac++] = String.fromCharCode(c1);				i++;			} else if (c1 > 191 && c1 < 224) {				c2 = str_data.charCodeAt(i + 1);				tmp_arr[ac++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));				i += 2;			} else {				c2 = str_data.charCodeAt(i + 1);				c3 = str_data.charCodeAt(i + 2);				tmp_arr[ac++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));				i += 3;			}		}	 		return tmp_arr.join('');	},	num_format: function(number, decimals, dec_point, thousands_sep) {	    number = (number + '').replace(/[^0-9+\-Ee.]/g, '');	    var n = !isFinite(+number) ? 0 : +number,	        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),	        sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,	        dec = (typeof dec_point === 'undefined') ? '.' : dec_point,	        s = '',	        toFixedFix = function (n, prec) {	            var k = Math.pow(10, prec);	            return '' + Math.round(n * k) / k;	        };	    // Fix for IE parseFloat(0.55).toFixed(0) = 0;	    s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');	    if (s[0].length > 3) {	        s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);	    }	    if ((s[1] || '').length < prec) {	        s[1] = s[1] || '';	        s[1] += new Array(prec - s[1].length + 1).join('0');	    }	    return s.join(dec);	}	};Info = {	TMsg: null,	_mActive: false,	CheckInLive: function()	{		try		{			$.post(Kernel._serv.live + "/actions/check_live.php", function(result) {				var now = $(".now-live").html();				if(result == "true")				{					if(now != null)						return;					$("body").prepend('<div class="now-live">\					<figure><img src="//resources.infosmart.mx/aprende/images/logo.png" /></figure>\					<h2>¡Estamos en <span>vivo</span>!</h2>\					<h3>Aprende sobre PHP, Java, HTML 5, CSS 3 y demás <a target="_blank" href="' + Kernel._serv.live + '/#/live">¡AHORA!</a>\					</div>');					$(".now-live").fadeIn(2500);				}				else				{					if(now == null)						return;					$(".now-live").fadeOut(2500).remove();				}			});		}		catch(e) { setTimeout(Info.CheckInLive, 2000); }	},	ShowMsg: function(message, time, block, cb)	{		if(this._mActive)		{			this.CloseMsg();			if(this.TMsg != null)			{				clearTimeout(TMsg);				TMsg = null;			}			setTimeout(function() { Info.ShowMsg(message, time, block, cb); }, 800);			return;		}		if(message == undefined || message == "")			message = "Cargando...";					if(block == true)			$("body").append('<div class="iload-block"></div>');				$("body").append('<div class="iload"><span>' + message + '</span></div>');		this._mActive = true;				if(time >= 3000)		{			TMsg = setTimeout(function() {				Info.CloseMsg();				if(cb != undefined)					cb();			}, time);		}	},		CloseMsg: function()	{		if(!this._mActive)			return;					$(".iload").fadeOut("slow", function() {			$(".iload").remove();			$(".iload-block").remove();		});				this._mActive = false;	},	InitBgs: function()	{		$("[data-bgcolor]").each(function()		{			Color = $(this).data("bgcolor");			if(Color == "" || Color == undefined)				return;			$(this).css("background-color", "#" + Color);		});		$("[data-color]").each(function()		{			Color = $(this).data("color");			if(Color == "" || Color == undefined)				return;			$(this).css("color", "#" + Color);		});	},	/* Gracias a nyanit.com */	Nyanit: function()	{		if(Kernel._page.nyan != false)			return;                $("a[href]").removeAttr("href");        flyflyfly();        alert("¡Atrapame!");        $("body").append('<audio src="http://nyanit.com/audio/nyanlooped.mp3" preload autoplay loop class="nyan_music"></audio>');        Kernel._page.nyan = true;	}};Files = {	ReadPhoto : function(p, c)	{		if(!Kernel.Allow("file"))		{			alert("Lo sentimos, pero no es posible subir la imagen debido a que su navegador web no soporta esta función, actualiza tu navegador web y vuelve a intentarlo.");			return;		}		photo = p.target.files[0];					if(photo.type !== "image/png" && photo.type !== "image/jpg" && photo.type !== "image/jpeg" && photo.type !== "image/gif")		{			alert('El formato de esta imagen no es válida.');			return;		}		File = new FileReader();					File.onerror = function() {			alert("Lo sentimos, pero ha ocurrido un error al intentar subir esta imagen.");		};						File.onload = function(e) {			$(c).attr("src", e.target.result);		};				File.readAsDataURL(photo);	},		ReturnPhoto : function(p, c)	{		if(!Kernel.Allow("file"))		{			alert("Lo sentimos, pero no es posible subir la imagen debido a que su navegador web no soporta esta función, actualiza tu navegador web y vuelve a intentarlo.");			return;		}				photo = p.target.files[0];					if(photo.type !== "image/png" && photo.type !== "image/jpg" && photo.type !== "image/jpeg" && photo.type !== "image/gif")		{			alert('El formato de esta imagen no es válida.');			return;		}		File = new FileReader();						File.onerror = function() {			alert("Lo sentimos, pero ha ocurrido un error al intentar subir esta imagen.");		};						File.onload = function(e) {			c(e.target.result);		};						File.readAsDataURL(photo);	},		GetPhoto : function(p, c)	{		if(!Kernel.Allow("file"))		{			alert("Lo sentimos, pero no es posible subir la imagen debido a que su navegador web no soporta esta función, actualiza tu navegador web y vuelve a intentarlo.");			return;		}				result = {};		photo = p.target.files[0];					result = photo;					if(photo.type !== "image/png" && photo.type !== "image/jpg" && photo.type !== "image/jpeg" && photo.type !== "image/gif")		{			alert('El formato de esta imagen no es válida.');			return;		}		File = new FileReader();						File.onerror = function() {			alert("Lo sentimos, pero ha ocurrido un error al intentar subir esta imagen.");		};						File.onload = function(e) {			result.src = e.target.result;			c(result);		};						File.readAsDataURL(photo);	},	ReturnFile : function(p, c)	{		if(!Kernel.Allow("file"))		{			alert("Lo sentimos, pero no es posible subir el archivo debido a que su navegador web no soporta esta función, actualiza tu navegador web y vuelve a intentarlo.");			return;		}				f = p.target.files[0];		console.log("Subiendo archivo de tipo " + f.type);		File = new FileReader();						File.onerror = function() {			alert("Lo sentimos, pero ha ocurrido un error al intentar subir este archivo.");		};						File.onload = function(e) {			c(e.target.result);		};						File.readAsDataURL(f);	},		GetFile : function(p, c)	{		if(!Kernel.Allow("file"))		{			alert("Lo sentimos, pero no es posible subir la imagen debido a que su navegador web no soporta esta función, actualiza tu navegador web y vuelve a intentarlo.");			return;		}				result = {};		f = p.target.files[0];		console.log("Subiendo archivo de tipo " + f.type);					result = f;		File = new FileReader();						File.onerror = function() {			alert("Lo sentimos, pero ha ocurrido un error al intentar subir este archivo.");		};						File.onload = function(e) {			result.src = e.target.result;			c(result);		};						File.readAsDataURL(f);	},}Menus = {	btn: null,	nav: null,	Init: function()	{		$("[role~='button']").live("click", function()		{			nav = $(this).next('nav');			cancel = false;			if(Menus.btn !== null)			{				if(Menus.nav.data('name') == nav.data('name'))					cancel = true;				Menus.Unload();				if(cancel)					return false;			}			if(nav.html() == null)				return;			nav.css("min-width", $(this).width() + 20);			$(this).addClass("on");			nav.slideDown("fast");			Menus.btn = $(this);			Menus.nav = nav;		});		$("[role~='menu'] nav li").live('click', Menus.Unload);	},	Prepare: function()	{		$("select[role~='menu']").each(function()		{			id = $(this).attr("id");			name = $(this).attr("name");			clas = $(this).attr("class");			options = {};			if(name == undefined || id == undefined)				return;			i = 0;			def = undefined;			$("#" + id + " option").each(function()			{				i++;				if($(this).val() == "" || $(this).attr("selected") != undefined)					def = i;									options[i] = {					val: $(this).val(),					name: $(this).html()				};			});			if(def == undefined && options[1] != undefined)				def = 1;			if(def == undefined)				return;			list = "";			for(i in options)			{				if(options[i].val == "")					continue;				list += '<li role="option" data-value="' + options[i].val + '">' + options[i].name + '</li>';			}			html = '<div role="menu" class="' + clas + '">\				<div class="bx" role="button">' + options[def].name + '</div>\				<nav role="listbox" data-name="' + name + '">' + list + '</nav>\			</div>';			input = '<input type="hidden" name="' + name + '" id="m-' + name + '" value="' + options[def].val + '" />';						$(this).parent().css("position", "relative");			$(this).before(input).before(html);			$(this).remove();		});	},	Unload: function()	{		t = $(this);		value = t.attr("data-value");		nav = t.parent();		button = nav.prev('[role~="button"]');		if(value !== undefined)			$('#m-' + nav.data('name')).val(value);		button.html(t.html());		if(Menus.btn == null)			return;		Menus.btn.removeClass("on");		Menus.nav.slideUp("fast");		Menus.btn = null;		Menus.nav = null;		return false;	}};$(document).on("ready", function() {			// Incluyendo archivo JavaScript Base.	Kernel.AddScript(Resources_Sys + '/js/functions.base.js');	// Incluyendo archivo JavaScript PHP.	Kernel.AddScript(Resources_Sys + '/js/external/php.min.js');	// Incluyendo archivo JavaScript para Range.	Kernel.AddScript(Resources_Sys + '/js/external/html5slider.js');	// Incluyendo archivo JavaScript para "Prefix Free"	if(Site != ".")	{		setTimeout(function () { 			Kernel.AddScript(Resources_Sys + '/js/external/prefix_free.js'); 		}, 2000);	}	// Archivo de Nyanit.	//Kernel.AddScript(Resources_Sys + '/js/functions.nyan.js');	//Kernel.AddScript(Resources_Sys + '/js/external/shortcut.js');	// Realizando ajustes en las ubicaciones.	try	{		if(Official == false || Kernel.StrPos(document.URL, "infosmart.mx") != false || Kernel.StrPos(document.URL, "infosmart.in") != false)		{			Kernel._serv.accounts = 'http://accounts.infosmart.mx';			Kernel._serv.resources_accounts = document.location.protocol + '//resources.infosmart.mx/accounts';			Kernel._serv.reports = 'http://reports.infosmart.mx';			Kernel._serv.live =  'http://wooots.infosmart.mx';		}	}	catch(e)	{		if(Kernel.StrPos(document.URL, "infosmart.mx") != false || Kernel.StrPos(document.URL, "infosmart.in") != false)		{			Kernel._serv.accounts = 'http://accounts.infosmart.mx';			Kernel._serv.resources_accounts = document.location.protocol + '//resources.infosmart.mx/accounts';			Kernel._serv.reports = 'http://reports.infosmart.mx';			Kernel._serv.live =  'http://wooots.infosmart.mx';		}	}	// Incluyendo archivo de Google Translate.	try	{		if(NoTranslate != true || NoTranslate == undefined)			Kernel.AddScript('//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit');	}	catch(e) { Kernel.AddScript('//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit'); }		// Incluyendo API de InfoSmart Cuentas.	if(Path != ".")		Kernel.AddScript(Kernel._serv.resources_accounts + '/api/v1/system.js');		// Esta aplicación no acepta Internet Explorer.	if(Kernel.GetBrowser() == "Internet Explorer")		$("#page").html('<div style="clear: both; height: 59px; padding:0 0 0 15px; position: relative; width: 820px; margin: 0 auto; margin-top: 15%; font-family: Segoe UI, Arial, sans-serif; font-size: 12px"><h1>Lo sentimos, pero estamos en el siglo XXI.</h1><a href="http://windows.microsoft.com/en-US/internet-explorer/products/ie/home?ocid=ie6_countdown_bannercode"><img src="http://storage.ie6countdown.com/assets/100/images/banners/warning_bar_0006_spanish_spain.jpg" border="0" height="42" width="820" alt="You are using an outdated browser. For a faster, safer browsing experience, upgrade for free today." /></a><br />Para continuar navegando por nuestras aplicaciones, por favor actualize su navegador :)</div>');	// Aprende en vivo - ¡Estamos en vivo!	if(Kernel.StrPos(document.URL, "aprende") == false && Kernel.StrPos(document.URL, "accounts") == false && Path != ".")	{		Info.CheckInLive();		setInterval("Info.CheckInLive()", 25000);	}	// Verificación de permisos y mensajes Cross-Site	if(Kernel.GetBrowser() != "Internet Explorer")	{		// Procesos iniciales.		Kernel.VerifyPerms();				// Llamadas seguras.		//window.addEventListener("message", getMessage, false);	}	// Iniciar instancias.	if(Path != ".")	{		Info.InitBgs();		Menus.Prepare();		Menus.Init();	}	// CTRL + M = @hotmail.com	$("input[type='email']").keyup(function(e) {		now = $(this);		t = (document.all) ? e.keyCode : e.which;				if(t == 77 && e.ctrlKey)			now.val(now.val() + "@hotmail.com");	});		// Ajustes de tamaño.	$(window).on("resize", function() 	{		InfoAlerts.FixIt();		$("body, html").attr("style", " ");	});		// Ajustes iniciales.	Kernel._page.title = document.title;	Kernel._page.hash = Kernel.FilterHash();	Kernel._protocol = document.location.protocol + '//';	// Preparar juego de "Nyan"	//PrepareNyan();		// Hemos terminado.	console.log('Se ha iniciado el Kernel en JavaScript con el protocolo ' + Kernel._protocol + '.');	K = Kernel;});function PrepareNyan(){	try	{			shortcut.add("Alt+N", function() {			Info.Nyanit();		}, {			'type':'keyup',			'propagate':false,			'target':document		});		console.log("Nyan MODE 'ON'");	}	catch(e) { setTimeout('PrepareNyan()', 500); }}function getMessage(e){	if(Kernel.StrPos(e.origin, "infosmart.mx") == false && Kernel.StrPos(e.origin, "localhost") == false && Kernel.StrPos(e.origin, "infosmart.zapto.org") == false)	{		console.warn('Acceso inválido de llamada desde ' + e.origin);		return;	}		var c = Kernel._callAction[e.data.action];		if(c == undefined)		console.warn('Acción de llamada no registrada.');	else	{		Kernel._lastCall = e;		c(e.data.result);			}}/** * InfoSmart JavaScript - Alertas * * Archivo plugin para Alertas de InfoSmart. * * InfoSmart. Todos los derechos reservados. * Copyright 2012 - Iván Bravo Bravo. * * http://www.infosmart.mx/ - http://www.jquery.com/**/InfoAlerts = {	_Ready: false,	_Callback: null,	_Options: null,	_pid: 0,	_wid: 0,		SetConfig: function(settings)	{		this._Options = {			"simple": false,			"overlay": true,			"overlay_opacity": "0.6",			"overlay_close": false,			"overlay_color": "white",			"ok_title": "Aceptar",			"ok_callback": null,			"close_title": "Cerrar",			"close_callback": null,			"time": 0		}				if(settings == undefined || settings == null)			return;					for(param in settings)			this._Options[param] = settings[param];	},		Show: function(title, message, settings, callback)	{		if(this._Ready)		{			console.warn("Se ha intentado abrir una nueva alerta con una activa.");			return;		}				this.SetConfig(settings);					O = this._Options;					if(O.overlay == true)		{			$("body").append('<div class="AlertOverlay"></div>');						$(".AlertOverlay").css("opacity", O.overlay_opacity).css("background", O.overlay_color).fadeIn("slow");						if(O.overlay_close == true)				$(".AlertOverlay").attr("onclick", "InfoAlerts.Close()");		}				$("body").append('<div class="AlertArea">\		<div class="AlertBox">\			<div class="AlertTitle">' + title + '</div>\			<div class="AlertContent">\				<div class="AlertMsg">' + message + '</div>\				<div class="AlertFoot"></div>\			</div>\		</div>\		</div>');				if(title == undefined || title == null || title == "")			$(".AlertTitle").remove();							if(O.ok_callback != null)			$(".AlertFoot").append('<a class="ibtn" onclick="' + O.ok_callback + '">' + O.ok_title + '</a>');					if(O.close_title != "" && O.close_title != undefined)			$(".AlertFoot").append('<a class="ibtn" onclick="InfoAlerts.Close()">' + O.close_title + '</a>');					if(O.close_callback != null)			this._Callback = O.close_callback;					if(O.close_title == "" && O.ok_callback == null)			$(".AlertFoot").remove();					if(O.simple == true)		{			$(".AlertTitle").remove();			$(".AlertFoot").remove();		}					$(".AlertBox").fadeIn("slow").css("display", "block");		this._Ready = true;				this.FixIt();				if(O.time > 3000)			setTimeout('InfoAlerts.Close()', O.time);					if(callback != undefined && callback != "")			callback();	},	ShowIt: function(id, settings, callback)	{		if(this._Ready)		{			console.warn("Se ha intentado abrir una nueva alerta con una activa.");			return;		}		this.SetConfig(settings);					O = this._Options;		if(O.overlay == true)		{			$(id).before('<div class="AlertOverlay"></div>');						$(".AlertOverlay").css("opacity", O.overlay_opacity).css("background", O.overlay_color).fadeIn("slow");						if(O.overlay_close == true)				$(".AlertOverlay").attr("onclick", "InfoAlerts.CloseIt()");		}		$(id).fadeIn("slow");					if(O.ok_callback != null)			$(id + " .AlertFoot").append('<a class="ibtn" onclick="' + O.ok_callback + '">' + O.ok_title + '</a>');					if(O.close_title != "" && O.close_title != undefined)			$(id + " .AlertFoot").append('<a class="ibtn" onclick="InfoAlerts.Close()">' + O.close_title + '</a>');					if(O.close_callback != null)			this._Callback = O.close_callback;					$(id + " .AlertBox").fadeIn("slow").css("display", "block");		this._Ready = true;				this.FixIt();				if(O.time > 3000)			setTimeout('InfoAlerts.CloseIt()', O.time);					if(callback != undefined && callback != "")			callback();	},		Close: function(callback)	{		if(!this._Ready)			return;					$(".AlertOverlay").fadeOut("slow", function() {			$(this).remove();		});				$(".AlertBox").fadeOut("slow", function() {			$(this).remove();		});				this._Ready = false;				if(this._Callback != null)			this._Callback();					if(callback != undefined && callback != "")			callback();	},	CloseIt: function(callback)	{		if(!this._Ready)			return;		$(".AlertOverlay").fadeOut("slow", function() {			$(this).remove();		});				$(".AlertBox").fadeOut("slow");		this._Ready = false;				if(this._Callback != null)			this._Callback();					if(callback != undefined && callback != "")			callback();	},		FixIt: function()	{		if(!this._Ready)			return;					var w = $(window).width();		var h = $(window).height();				$(".AlertBox, .AlertMsg").css("max-width", parseFloat(w - 100));		$(".AlertBox, .AlertMsg").css("max-height", parseFloat(h - 100));				var bw = $(".AlertBox").width();				var nl = parseFloat(w / 2);		nl = parseFloat(nl - (bw / 2));				$(".AlertBox").css("left", nl);			},		Notify: function(title, content, icon, type, callback)	{		if(!K.Allow("notify"))		{			console.error("La función de alertas de escritorio no estan soportadas por el navegador.");			return;		}				if(window.Notifications.checkPermission() != 0)			window.Notifications.requestPermission();				if(type == undefined || type == "")			type == "simple";					if(type = "simple")			window.Notifications.createNotification(icon, title, content).show();		else			window.Notifications.createHTMLNotification(content).show();					if(callback != undefined && callback != "")			callback();	},		Popup: function(title, message, time, callback)	{		this._pid++;		var area = $(".PopArea").html();				if(area == null)			$("body").append('<div class="PopArea"></div>');				$(".PopArea").append('<div class="AlertPop" data-alert-pop="' + this._pid + '">\			<span class="title">' + title + '</span>' + message + '\			<p><a onclick="InfoAlerts.Pclose(\'' + this._pid + '\');" class="close">> Cerrar</a></p>\		</div>');				$(".AlertPop").fadeIn("slow");				if(time > 3000 && time != undefined)		{			setTimeout(function() {				InfoAlerts.Pclose(InfoAlerts._pid);			}, time);		}				if(callback != undefined && callback != "")			callback();					return this._pid;	},	Wopup: function(title, message, time, callback)	{		this._wid++;		var area = $(".WopArea").html();				if(area == null)			$("body").append('<div class="WopArea"></div>');				$(".WopArea").append('<div class="AlertWop" data-alert-pop="' + this._wid + '">\			<span class="title">' + title + '</span>' + message + '\			<p><a onclick="InfoAlerts.Wclose(\'' + this._wid + '\');" class="close">> Cerrar</a></p>\		</div>');				$(".AlertWop").fadeIn("slow");				if(time > 3000 && time != undefined)		{			setTimeout(function() {				InfoAlerts.Wclose(InfoAlerts._wid);			}, time);		}				if(callback != undefined && callback != "")			callback();					return this._wid;	},		Pclose: function(i)	{				$(".AlertPop[data-alert-pop='" + i + "']").fadeOut(2500, function() { 			$(".AlertPop[data-alert-pop='" + i + "']").remove();		}); 			},	Wclose: function(i)	{				$(".AlertWop[data-alert-pop='" + i + "']").fadeOut(2500, function() { 			$(".AlertWop[data-alert-pop='" + i + "']").remove();		}); 			},		show: function(title, message, settings, callback)	{		this.Show(title, message, settings, callback);	},		close: function(callback)	{		this.Close(callback);	},		notify: function(title, content, icon, type, callback)	{		this.notify(title, content, icon, type, callback);	}}