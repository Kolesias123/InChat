/** * JavaScript - Conexión al servidor. * InfoSmart. Todos los derechos reservados. * * Copyright 2012 - Iván Bravo Bravo and jQuery Technology. * http://chat.infosmart.mx/ - http://www.jquery.com/**/var Serv = null;var mySock = 0;var user_message_wait = 0;var users_list = 0;var Ra = null;$(document).on("ready", function() {	FixIt();		DefineID();	Connect();		$("#user-message").on("keyup", Write);	$("#user-message").on("hover", function() { 		user_message_wait = 0; 		$("#user-message").height(30);	});		$(".c2").on("hover", function() {		users_list = 0;		AnimList(false);	});		$("#radio-volume").on("change", ChangeVolume);		$(window).on("resize", FixIt);	$(".c1").on("resize", FixIt);		if(Radio != undefined)		AddRadio();		//setInterval(Waiting, 1000);	setInterval(MessageTime, 3000);	setTimeout(FixIt, 500);});/* Funciones - Acciones */function Write(e){	user_message_wait = 0; 	$("#user-message").height(30);		if(e.keyCode != "13")		return;			var message = $(this).val();	SendMessage(message);		$(this).val("");}/* Funciones - Sistema */function DefineID(){		if(My_SessionId == undefined || My_SessionId == "0" || My_SessionId == "")	{				My_SessionId = randomString;				$.post(Site + '/actions/register.php', {'sessionId': My_SessionId}, function(data) { My_Username = data; });				$(".my").html(My_Username);		$(".my").attr("data-userId", My_SessionId);	}}function SendMessage(message){	Serv.emit("sendMessage", {		'roomID': roomId,		'userID': My_SessionId, 		'message': message	});}function SendCommand(com, value){	var data = {		"type": com,		"value": value,		"hash": My_Hash,		"roomId": roomId	}		Serv.emit("sendCommand", data);}/* Funciones - Servidor Chat */function Connect(){	try	{		Serv = io.connect(Host);				Serv.on("connect", Welcome);		Actions();	}	catch(e) { BlockChat(); }}function Welcome(){		if(mySock == 0 || mySock == "0" || My_SessionId == 0)	{		$("#chat .messages").html("Autorizando...");		setTimeout(Welcome, 1000);				return;	}		var html = '<label data-userId="' + My_SessionId + '" class="my">' + My_Username + '</label>';	$(".users-list").prepend(html);			$("#chat .messages").empty();	$("#chat #user-message").removeAttr("disabled");		$("#myphoto, .my").on("click", EditProfile);		Serv.emit("Welcome", {		'Id': My_SessionId,		'roomID': roomId,		'sockID': mySock,		'settings': Options	});}function Actions(){	Serv.on("defineSock", function(data) {		mySock = data;	});		Serv.on("sendData", Process);		Serv.on("disconnect", BlockChat);}function Process(data){		if(data.type == "message")	{		NewMessage(data.message, data.fromID, data.fromName, data.time);	}		if(data.type == "sys_message")	{		NewSystemMessage(data.message);	}		if(data.type == "users_list")	{		Add2List(data.list);	}		if(data.type == "disconnect")	{		Serv.disconnect();				if(data.reason == "kick")			NewSystemMessage("Has sido pateado de la sala por el administrador.");	}}/* Funciones - Chat */function BlockChat(){	$("#chat .messages").html("<p>No ha sido posible establecer una conexión con el servidor.</p>");	$("#chat #user-message").attr("disabled", "disabled");		$("#chat .users-list").empty();		//setTimeout(function() { document.location.reload(); }, 2500);}function NewMessage(message, fromId, fromName, time){	var html = '<div class="user-msg">\		<figure><img src="' + Site + '/photo/' + fromId + '/small" /></figure>\		<aside>\			<b class="name" data-userId="' + fromId + '">' + fromName + ' dice:</b>\			<time data-unix="' + time + '">' + CalculateTime(time) + '</time>\			<div class="clear"></div>\			<label>' + message + '</label>\		</aside>\	</div>';		$("#chat .messages").prepend(html);	$(".user-msg .name").on("click", ToDo);		BlinkUser(fromId);			var o = Json_decode(Options);		if(o.sound_message == "true")		Notify();}function NewSystemMessage(message){	var html = '<div class="user-msg">\		<b class="name">Mensaje del sistema:</b>\		<div class="clear"></div>\		<label>' + message + '</label>\	</div>';		$("#chat .messages").prepend(html);}function Add2List(users){	var html = "";	var res = null;		for(i in users)	{				if(users[i].sessionId == My_SessionId)			continue;					html += '<label data-userId="' + users[i].sessionId + '">' + users[i].username + '</label>';	}		$(".users-list #list").html(html);	$(".users-list #list label").on("click", ToDo);	}/* Funciones - Chat - Herramientas */function FixIt(){	var w = $(window).width();	var h = $(window).height();		var w1 = $("#chat .c1").width();	var h1 = $("#chat .c1").height();		$(".chat-area").height(h - 10);	$(".chat-area textarea").width(w1 - 20);	$(".chat-area .messages").width(w1 - 32);	$(".chat-area .messages").height(h - 110);		setTimeout(function() {		h1 = $("#chat .c1").height();				$(".chat-area .c2").height(h1 - 11);	}, 500);		Alert.FixIt();}function Notify(){	document.getElementById('alert').play();}function Waiting(){	user_message_wait++;	users_list++;		/*	if(user_message_wait > 5)	{		$("#user-message").height(15);	}	*/	/*	if(users_list > 5)	{		AnimList(true);	}	*/}function BlinkUser(userId){	var user = $("#chat .users-list label[data-userId='" + userId + "']");		user.addClass("blink");		setTimeout(function() { user.removeClass("blink"); }, 500);}function AnimList(hide){	if(hide == true)	{		$("#chat .c1").addClass("big");		$("#chat .c2").addClass("hide");				FixIt();	}	else	{		$("#chat .c1").removeClass("big");		$("#chat .c2").removeClass("hide");				FixIt();	}}function AddRadio(){	Ra = new Audio(Radio + "/;stream.nsv");	Ra.setAttribute("src", Radio + "/;stream.nsv");	Ra.volume = 0.8;	Ra.play();}function ChangeVolume(){	var vol = parseFloat($("#radio-volume").val());		Ra.volume = parseFloat((vol / 100));	$("#vol").html(vol + "%");}function MessageTime(){	$(".user-msg time").each(function() {		var time = $(this).attr("data-unix");				$(this).html(CalculateTime(time));	});}/* Funciones - Perfiles y acciones */function EditProfile(){	Alert.Show("Editar perfil", '<iframe src="' + Site + '/actions/edit_profile.php" frameborder="0" allowtransparency="1"></iframe>');}function ToDo(){	var userId = $(this).attr("data-userId");		if(userId == My_SessionId)	{		EditProfile();		return;	}		//var username = $(".users-list .list label[data-userId='" + userId + "']").html();		Alert.Show("Ver perfil", '<iframe src="' + Site + '/actions/view_profile.php?roomId=' + roomId + '&userId=' + userId + '" frameborder="0" allowtransparency="1"></iframe>');}function ApplyProfile(data){	data = Json_decode(data);		if(data.username != undefined)	{		My_Username = data.username;		$(".my").html(My_Username);	}		if(data.photo != undefined)	{		$("#myphoto").attr("src", Site + "/photo/" + My_Id);	}		Serv.emit("updateUser", My_SessionId);		Alert.Close();}/* Funciones - ETC */function SetData(param, value){	try	{ window.localStorage.setItem(param, value); }	catch (e)	{ console.error('Ha sucedido un error al intentar guardar información local.'); }}	function GetData(param){	try	{ return window.localStorage.getItem(param); }	catch (e)	{ console.error('Ha sucedido un error al intentar obtener una variable de la información local.');	}}function Json_decode(str_json){		var json = window.JSON;				if (typeof json === 'object' && typeof json.parse === 'function') 		{						try 			{ return json.parse(str_json); } 			catch (err) 			{				console.error("Ha sucedido un error al descodificar '" + str_json + "' de JSON.", "error");				return null;			}		}	 		var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;		var j;		var text = str_json;		cx.lastIndex = 0;				if (cx.test(text)) 		{			text = text.replace(cx, function (a) {				return '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);			});		}	 		if ((/^[\],:{}\s]*$/).		test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@').		replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').		replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) 		{			j = eval('(' + text + ')');	 			return j;		}	 		return null;}function CalculateTime(time){		var inte = ["segundo", "minuto", "hora", "día", "semana", "mes", "año"];		var dur = [60, 60, 24, 7, 4.35, 12];				time = parseInt(time);		var now = parseInt(UnixTime());		var j = 0;				var dif = 0;		var str = "";				var sh = time + 10;				if(now == time || now < sh)			return "Justo ahora";		else if(now > time)		{			dif = now - time;			str = "Hace";		}		else		{			dif = time - now;			str = "Dentro de";		}				for(j = 0; dif >= dur[j] && j < dur.length - 1; j++)			dif /= dur[j];					dif = Math.round(dif);				if(dif != 1)		{			inte[5] += "e";			inte[j] += "s";		}				return str + " " + dif + " " + inte[j];}function UnixTime() {	return Math.round((new Date()).getTime() / 1000);}